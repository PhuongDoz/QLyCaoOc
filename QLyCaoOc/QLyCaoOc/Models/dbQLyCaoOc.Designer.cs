#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLyCaoOc.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLCAOOC")]
	public partial class dbQLyCaoOcDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCONGTY(CONGTY instance);
    partial void UpdateCONGTY(CONGTY instance);
    partial void DeleteCONGTY(CONGTY instance);
    partial void InsertHOPDONG(HOPDONG instance);
    partial void UpdateHOPDONG(HOPDONG instance);
    partial void DeleteHOPDONG(HOPDONG instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertPHIEUGIAHAN(PHIEUGIAHAN instance);
    partial void UpdatePHIEUGIAHAN(PHIEUGIAHAN instance);
    partial void DeletePHIEUGIAHAN(PHIEUGIAHAN instance);
    partial void InsertPHONG(PHONG instance);
    partial void UpdatePHONG(PHONG instance);
    partial void DeletePHONG(PHONG instance);
    partial void InsertTANG(TANG instance);
    partial void UpdateTANG(TANG instance);
    partial void DeleteTANG(TANG instance);
    partial void InsertTHAMSO(THAMSO instance);
    partial void UpdateTHAMSO(THAMSO instance);
    partial void DeleteTHAMSO(THAMSO instance);
    partial void InsertCHITIETHOPDONG(CHITIETHOPDONG instance);
    partial void UpdateCHITIETHOPDONG(CHITIETHOPDONG instance);
    partial void DeleteCHITIETHOPDONG(CHITIETHOPDONG instance);
    #endregion
		
		public dbQLyCaoOcDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QLCAOOCConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLyCaoOcDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLyCaoOcDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLyCaoOcDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLyCaoOcDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CONGTY> CONGTies
		{
			get
			{
				return this.GetTable<CONGTY>();
			}
		}
		
		public System.Data.Linq.Table<HOPDONG> HOPDONGs
		{
			get
			{
				return this.GetTable<HOPDONG>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUGIAHAN> PHIEUGIAHANs
		{
			get
			{
				return this.GetTable<PHIEUGIAHAN>();
			}
		}
		
		public System.Data.Linq.Table<PHONG> PHONGs
		{
			get
			{
				return this.GetTable<PHONG>();
			}
		}
		
		public System.Data.Linq.Table<TANG> TANGs
		{
			get
			{
				return this.GetTable<TANG>();
			}
		}
		
		public System.Data.Linq.Table<THAMSO> THAMSOs
		{
			get
			{
				return this.GetTable<THAMSO>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETHOPDONG> CHITIETHOPDONGs
		{
			get
			{
				return this.GetTable<CHITIETHOPDONG>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CONGTY")]
	public partial class CONGTY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaCongTy;
		
		private string _TenCT;
		
		private string _DiaChiCT;
		
		private string _SDT;
		
		private string _MaHD;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
		private EntityRef<HOPDONG> _HOPDONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCongTyChanging(string value);
    partial void OnMaCongTyChanged();
    partial void OnTenCTChanging(string value);
    partial void OnTenCTChanged();
    partial void OnDiaChiCTChanging(string value);
    partial void OnDiaChiCTChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnMaHDChanging(string value);
    partial void OnMaHDChanged();
    #endregion
		
		public CONGTY()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			this._HOPDONG = default(EntityRef<HOPDONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCongTy", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCongTy
		{
			get
			{
				return this._MaCongTy;
			}
			set
			{
				if ((this._MaCongTy != value))
				{
					this.OnMaCongTyChanging(value);
					this.SendPropertyChanging();
					this._MaCongTy = value;
					this.SendPropertyChanged("MaCongTy");
					this.OnMaCongTyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenCT", DbType="NVarChar(50)")]
		public string TenCT
		{
			get
			{
				return this._TenCT;
			}
			set
			{
				if ((this._TenCT != value))
				{
					this.OnTenCTChanging(value);
					this.SendPropertyChanging();
					this._TenCT = value;
					this.SendPropertyChanged("TenCT");
					this.OnTenCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiCT", DbType="NVarChar(50)")]
		public string DiaChiCT
		{
			get
			{
				return this._DiaChiCT;
			}
			set
			{
				if ((this._DiaChiCT != value))
				{
					this.OnDiaChiCTChanging(value);
					this.SendPropertyChanging();
					this._DiaChiCT = value;
					this.SendPropertyChanged("DiaChiCT");
					this.OnDiaChiCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(12)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					if (this._HOPDONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONGTY_NHANVIEN", Storage="_NHANVIENs", ThisKey="MaCongTy", OtherKey="MaCongTy")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOPDONG_CONGTY", Storage="_HOPDONG", ThisKey="MaHD", OtherKey="MaHD", IsForeignKey=true)]
		public HOPDONG HOPDONG
		{
			get
			{
				return this._HOPDONG.Entity;
			}
			set
			{
				HOPDONG previousValue = this._HOPDONG.Entity;
				if (((previousValue != value) 
							|| (this._HOPDONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOPDONG.Entity = null;
						previousValue.CONGTies.Remove(this);
					}
					this._HOPDONG.Entity = value;
					if ((value != null))
					{
						value.CONGTies.Add(this);
						this._MaHD = value.MaHD;
					}
					else
					{
						this._MaHD = default(string);
					}
					this.SendPropertyChanged("HOPDONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.CONGTY = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.CONGTY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOPDONG")]
	public partial class HOPDONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHD;
		
		private System.Nullable<System.DateTime> _NgayLap;
		
		private System.Nullable<int> _TienCoc;
		
		private EntitySet<CONGTY> _CONGTies;
		
		private EntitySet<CHITIETHOPDONG> _CHITIETHOPDONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDChanging(string value);
    partial void OnMaHDChanged();
    partial void OnNgayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapChanged();
    partial void OnTienCocChanging(System.Nullable<int> value);
    partial void OnTienCocChanged();
    #endregion
		
		public HOPDONG()
		{
			this._CONGTies = new EntitySet<CONGTY>(new Action<CONGTY>(this.attach_CONGTies), new Action<CONGTY>(this.detach_CONGTies));
			this._CHITIETHOPDONGs = new EntitySet<CHITIETHOPDONG>(new Action<CHITIETHOPDONG>(this.attach_CHITIETHOPDONGs), new Action<CHITIETHOPDONG>(this.detach_CHITIETHOPDONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TienCoc", DbType="Int")]
		public System.Nullable<int> TienCoc
		{
			get
			{
				return this._TienCoc;
			}
			set
			{
				if ((this._TienCoc != value))
				{
					this.OnTienCocChanging(value);
					this.SendPropertyChanging();
					this._TienCoc = value;
					this.SendPropertyChanged("TienCoc");
					this.OnTienCocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOPDONG_CONGTY", Storage="_CONGTies", ThisKey="MaHD", OtherKey="MaHD")]
		public EntitySet<CONGTY> CONGTies
		{
			get
			{
				return this._CONGTies;
			}
			set
			{
				this._CONGTies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOPDONG_CHITIETHOPDONG", Storage="_CHITIETHOPDONGs", ThisKey="MaHD", OtherKey="MaHD")]
		public EntitySet<CHITIETHOPDONG> CHITIETHOPDONGs
		{
			get
			{
				return this._CHITIETHOPDONGs;
			}
			set
			{
				this._CHITIETHOPDONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CONGTies(CONGTY entity)
		{
			this.SendPropertyChanging();
			entity.HOPDONG = this;
		}
		
		private void detach_CONGTies(CONGTY entity)
		{
			this.SendPropertyChanging();
			entity.HOPDONG = null;
		}
		
		private void attach_CHITIETHOPDONGs(CHITIETHOPDONG entity)
		{
			this.SendPropertyChanging();
			entity.HOPDONG = this;
		}
		
		private void detach_CHITIETHOPDONGs(CHITIETHOPDONG entity)
		{
			this.SendPropertyChanging();
			entity.HOPDONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private string _TenNV;
		
		private string _DiaChiNV;
		
		private string _SDTNV;
		
		private string _MaCongTy;
		
		private string _MaPHG;
		
		private EntityRef<CONGTY> _CONGTY;
		
		private EntityRef<PHONG> _PHONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnTenNVChanging(string value);
    partial void OnTenNVChanged();
    partial void OnDiaChiNVChanging(string value);
    partial void OnDiaChiNVChanged();
    partial void OnSDTNVChanging(string value);
    partial void OnSDTNVChanged();
    partial void OnMaCongTyChanging(string value);
    partial void OnMaCongTyChanged();
    partial void OnMaPHGChanging(string value);
    partial void OnMaPHGChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._CONGTY = default(EntityRef<CONGTY>);
			this._PHONG = default(EntityRef<PHONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNV", DbType="NVarChar(50)")]
		public string TenNV
		{
			get
			{
				return this._TenNV;
			}
			set
			{
				if ((this._TenNV != value))
				{
					this.OnTenNVChanging(value);
					this.SendPropertyChanging();
					this._TenNV = value;
					this.SendPropertyChanged("TenNV");
					this.OnTenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiNV", DbType="NVarChar(50)")]
		public string DiaChiNV
		{
			get
			{
				return this._DiaChiNV;
			}
			set
			{
				if ((this._DiaChiNV != value))
				{
					this.OnDiaChiNVChanging(value);
					this.SendPropertyChanging();
					this._DiaChiNV = value;
					this.SendPropertyChanged("DiaChiNV");
					this.OnDiaChiNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDTNV", DbType="NVarChar(10)")]
		public string SDTNV
		{
			get
			{
				return this._SDTNV;
			}
			set
			{
				if ((this._SDTNV != value))
				{
					this.OnSDTNVChanging(value);
					this.SendPropertyChanging();
					this._SDTNV = value;
					this.SendPropertyChanged("SDTNV");
					this.OnSDTNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCongTy", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string MaCongTy
		{
			get
			{
				return this._MaCongTy;
			}
			set
			{
				if ((this._MaCongTy != value))
				{
					if (this._CONGTY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCongTyChanging(value);
					this.SendPropertyChanging();
					this._MaCongTy = value;
					this.SendPropertyChanged("MaCongTy");
					this.OnMaCongTyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPHG", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string MaPHG
		{
			get
			{
				return this._MaPHG;
			}
			set
			{
				if ((this._MaPHG != value))
				{
					if (this._PHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPHGChanging(value);
					this.SendPropertyChanging();
					this._MaPHG = value;
					this.SendPropertyChanged("MaPHG");
					this.OnMaPHGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONGTY_NHANVIEN", Storage="_CONGTY", ThisKey="MaCongTy", OtherKey="MaCongTy", IsForeignKey=true)]
		public CONGTY CONGTY
		{
			get
			{
				return this._CONGTY.Entity;
			}
			set
			{
				CONGTY previousValue = this._CONGTY.Entity;
				if (((previousValue != value) 
							|| (this._CONGTY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONGTY.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._CONGTY.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._MaCongTy = value.MaCongTy;
					}
					else
					{
						this._MaCongTy = default(string);
					}
					this.SendPropertyChanged("CONGTY");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_NHANVIEN", Storage="_PHONG", ThisKey="MaPHG", OtherKey="MaPHG", IsForeignKey=true)]
		public PHONG PHONG
		{
			get
			{
				return this._PHONG.Entity;
			}
			set
			{
				PHONG previousValue = this._PHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONG.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._PHONG.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._MaPHG = value.MaPHG;
					}
					else
					{
						this._MaPHG = default(string);
					}
					this.SendPropertyChanged("PHONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUGIAHAN")]
	public partial class PHIEUGIAHAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPhieuGiaHan;
		
		private System.Nullable<System.DateTime> _NgayGiaHan;
		
		private System.Nullable<System.DateTime> _NgayHetHan;
		
		private string _MaHD;
		
		private string _MaPHG;
		
		private EntityRef<CHITIETHOPDONG> _CHITIETHOPDONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhieuGiaHanChanging(string value);
    partial void OnMaPhieuGiaHanChanged();
    partial void OnNgayGiaHanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayGiaHanChanged();
    partial void OnNgayHetHanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayHetHanChanged();
    partial void OnMaHDChanging(string value);
    partial void OnMaHDChanged();
    partial void OnMaPHGChanging(string value);
    partial void OnMaPHGChanged();
    #endregion
		
		public PHIEUGIAHAN()
		{
			this._CHITIETHOPDONG = default(EntityRef<CHITIETHOPDONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhieuGiaHan", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPhieuGiaHan
		{
			get
			{
				return this._MaPhieuGiaHan;
			}
			set
			{
				if ((this._MaPhieuGiaHan != value))
				{
					this.OnMaPhieuGiaHanChanging(value);
					this.SendPropertyChanging();
					this._MaPhieuGiaHan = value;
					this.SendPropertyChanged("MaPhieuGiaHan");
					this.OnMaPhieuGiaHanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGiaHan", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayGiaHan
		{
			get
			{
				return this._NgayGiaHan;
			}
			set
			{
				if ((this._NgayGiaHan != value))
				{
					this.OnNgayGiaHanChanging(value);
					this.SendPropertyChanging();
					this._NgayGiaHan = value;
					this.SendPropertyChanged("NgayGiaHan");
					this.OnNgayGiaHanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayHetHan", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayHetHan
		{
			get
			{
				return this._NgayHetHan;
			}
			set
			{
				if ((this._NgayHetHan != value))
				{
					this.OnNgayHetHanChanging(value);
					this.SendPropertyChanging();
					this._NgayHetHan = value;
					this.SendPropertyChanged("NgayHetHan");
					this.OnNgayHetHanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="VarChar(5)")]
		public string MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					if (this._CHITIETHOPDONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPHG", DbType="VarChar(5)")]
		public string MaPHG
		{
			get
			{
				return this._MaPHG;
			}
			set
			{
				if ((this._MaPHG != value))
				{
					if (this._CHITIETHOPDONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPHGChanging(value);
					this.SendPropertyChanging();
					this._MaPHG = value;
					this.SendPropertyChanged("MaPHG");
					this.OnMaPHGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHITIETHOPDONG_PHIEUGIAHAN", Storage="_CHITIETHOPDONG", ThisKey="MaHD,MaPHG", OtherKey="MaHD,MaPHG", IsForeignKey=true)]
		public CHITIETHOPDONG CHITIETHOPDONG
		{
			get
			{
				return this._CHITIETHOPDONG.Entity;
			}
			set
			{
				CHITIETHOPDONG previousValue = this._CHITIETHOPDONG.Entity;
				if (((previousValue != value) 
							|| (this._CHITIETHOPDONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHITIETHOPDONG.Entity = null;
						previousValue.PHIEUGIAHANs.Remove(this);
					}
					this._CHITIETHOPDONG.Entity = value;
					if ((value != null))
					{
						value.PHIEUGIAHANs.Add(this);
						this._MaHD = value.MaHD;
						this._MaPHG = value.MaPHG;
					}
					else
					{
						this._MaHD = default(string);
						this._MaPHG = default(string);
					}
					this.SendPropertyChanged("CHITIETHOPDONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHONG")]
	public partial class PHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPHG;
		
		private string _TenPHG;
		
		private int _Tang;
		
		private int _DienTich;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
		private EntitySet<CHITIETHOPDONG> _CHITIETHOPDONGs;
		
		private EntityRef<TANG> _TANG1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPHGChanging(string value);
    partial void OnMaPHGChanged();
    partial void OnTenPHGChanging(string value);
    partial void OnTenPHGChanged();
    partial void OnTangChanging(int value);
    partial void OnTangChanged();
    partial void OnDienTichChanging(int value);
    partial void OnDienTichChanged();
    #endregion
		
		public PHONG()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			this._CHITIETHOPDONGs = new EntitySet<CHITIETHOPDONG>(new Action<CHITIETHOPDONG>(this.attach_CHITIETHOPDONGs), new Action<CHITIETHOPDONG>(this.detach_CHITIETHOPDONGs));
			this._TANG1 = default(EntityRef<TANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPHG", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPHG
		{
			get
			{
				return this._MaPHG;
			}
			set
			{
				if ((this._MaPHG != value))
				{
					this.OnMaPHGChanging(value);
					this.SendPropertyChanging();
					this._MaPHG = value;
					this.SendPropertyChanged("MaPHG");
					this.OnMaPHGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPHG", DbType="NVarChar(50)")]
		public string TenPHG
		{
			get
			{
				return this._TenPHG;
			}
			set
			{
				if ((this._TenPHG != value))
				{
					this.OnTenPHGChanging(value);
					this.SendPropertyChanging();
					this._TenPHG = value;
					this.SendPropertyChanged("TenPHG");
					this.OnTenPHGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tang", DbType="Int NOT NULL")]
		public int Tang
		{
			get
			{
				return this._Tang;
			}
			set
			{
				if ((this._Tang != value))
				{
					if (this._TANG1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTangChanging(value);
					this.SendPropertyChanging();
					this._Tang = value;
					this.SendPropertyChanged("Tang");
					this.OnTangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienTich", DbType="Int NOT NULL")]
		public int DienTich
		{
			get
			{
				return this._DienTich;
			}
			set
			{
				if ((this._DienTich != value))
				{
					if (this._TANG1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDienTichChanging(value);
					this.SendPropertyChanging();
					this._DienTich = value;
					this.SendPropertyChanged("DienTich");
					this.OnDienTichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_NHANVIEN", Storage="_NHANVIENs", ThisKey="MaPHG", OtherKey="MaPHG")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_CHITIETHOPDONG", Storage="_CHITIETHOPDONGs", ThisKey="MaPHG", OtherKey="MaPHG")]
		public EntitySet<CHITIETHOPDONG> CHITIETHOPDONGs
		{
			get
			{
				return this._CHITIETHOPDONGs;
			}
			set
			{
				this._CHITIETHOPDONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TANG_PHONG", Storage="_TANG1", ThisKey="Tang,DienTich", OtherKey="Tang1,DienTich", IsForeignKey=true)]
		public TANG TANG1
		{
			get
			{
				return this._TANG1.Entity;
			}
			set
			{
				TANG previousValue = this._TANG1.Entity;
				if (((previousValue != value) 
							|| (this._TANG1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TANG1.Entity = null;
						previousValue.PHONGs.Remove(this);
					}
					this._TANG1.Entity = value;
					if ((value != null))
					{
						value.PHONGs.Add(this);
						this._Tang = value.Tang1;
						this._DienTich = value.DienTich;
					}
					else
					{
						this._Tang = default(int);
						this._DienTich = default(int);
					}
					this.SendPropertyChanged("TANG1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = null;
		}
		
		private void attach_CHITIETHOPDONGs(CHITIETHOPDONG entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = this;
		}
		
		private void detach_CHITIETHOPDONGs(CHITIETHOPDONG entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TANG")]
	public partial class TANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Tang1;
		
		private int _DienTich;
		
		private string _Gia;
		
		private EntitySet<PHONG> _PHONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTang1Changing(int value);
    partial void OnTang1Changed();
    partial void OnDienTichChanging(int value);
    partial void OnDienTichChanged();
    partial void OnGiaChanging(string value);
    partial void OnGiaChanged();
    #endregion
		
		public TANG()
		{
			this._PHONGs = new EntitySet<PHONG>(new Action<PHONG>(this.attach_PHONGs), new Action<PHONG>(this.detach_PHONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Tang", Storage="_Tang1", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Tang1
		{
			get
			{
				return this._Tang1;
			}
			set
			{
				if ((this._Tang1 != value))
				{
					this.OnTang1Changing(value);
					this.SendPropertyChanging();
					this._Tang1 = value;
					this.SendPropertyChanged("Tang1");
					this.OnTang1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienTich", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DienTich
		{
			get
			{
				return this._DienTich;
			}
			set
			{
				if ((this._DienTich != value))
				{
					this.OnDienTichChanging(value);
					this.SendPropertyChanging();
					this._DienTich = value;
					this.SendPropertyChanged("DienTich");
					this.OnDienTichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TANG_PHONG", Storage="_PHONGs", ThisKey="Tang1,DienTich", OtherKey="Tang,DienTich")]
		public EntitySet<PHONG> PHONGs
		{
			get
			{
				return this._PHONGs;
			}
			set
			{
				this._PHONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHONGs(PHONG entity)
		{
			this.SendPropertyChanging();
			entity.TANG1 = this;
		}
		
		private void detach_PHONGs(PHONG entity)
		{
			this.SendPropertyChanging();
			entity.TANG1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THAMSO")]
	public partial class THAMSO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTS;
		
		private string _TenTS;
		
		private System.Nullable<int> _GiaTriTS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTSChanging(string value);
    partial void OnMaTSChanged();
    partial void OnTenTSChanging(string value);
    partial void OnTenTSChanged();
    partial void OnGiaTriTSChanging(System.Nullable<int> value);
    partial void OnGiaTriTSChanged();
    #endregion
		
		public THAMSO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTS", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTS
		{
			get
			{
				return this._MaTS;
			}
			set
			{
				if ((this._MaTS != value))
				{
					this.OnMaTSChanging(value);
					this.SendPropertyChanging();
					this._MaTS = value;
					this.SendPropertyChanged("MaTS");
					this.OnMaTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTS", DbType="NVarChar(50)")]
		public string TenTS
		{
			get
			{
				return this._TenTS;
			}
			set
			{
				if ((this._TenTS != value))
				{
					this.OnTenTSChanging(value);
					this.SendPropertyChanging();
					this._TenTS = value;
					this.SendPropertyChanged("TenTS");
					this.OnTenTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaTriTS", DbType="Int")]
		public System.Nullable<int> GiaTriTS
		{
			get
			{
				return this._GiaTriTS;
			}
			set
			{
				if ((this._GiaTriTS != value))
				{
					this.OnGiaTriTSChanging(value);
					this.SendPropertyChanging();
					this._GiaTriTS = value;
					this.SendPropertyChanged("GiaTriTS");
					this.OnGiaTriTSChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETHOPDONG")]
	public partial class CHITIETHOPDONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHD;
		
		private string _MaPHG;
		
		private System.Nullable<int> _ThoiGianThue;
		
		private EntitySet<PHIEUGIAHAN> _PHIEUGIAHANs;
		
		private EntityRef<HOPDONG> _HOPDONG;
		
		private EntityRef<PHONG> _PHONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDChanging(string value);
    partial void OnMaHDChanged();
    partial void OnMaPHGChanging(string value);
    partial void OnMaPHGChanged();
    partial void OnThoiGianThueChanging(System.Nullable<int> value);
    partial void OnThoiGianThueChanged();
    #endregion
		
		public CHITIETHOPDONG()
		{
			this._PHIEUGIAHANs = new EntitySet<PHIEUGIAHAN>(new Action<PHIEUGIAHAN>(this.attach_PHIEUGIAHANs), new Action<PHIEUGIAHAN>(this.detach_PHIEUGIAHANs));
			this._HOPDONG = default(EntityRef<HOPDONG>);
			this._PHONG = default(EntityRef<PHONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					if (this._HOPDONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPHG", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPHG
		{
			get
			{
				return this._MaPHG;
			}
			set
			{
				if ((this._MaPHG != value))
				{
					if (this._PHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPHGChanging(value);
					this.SendPropertyChanging();
					this._MaPHG = value;
					this.SendPropertyChanged("MaPHG");
					this.OnMaPHGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianThue", DbType="Int")]
		public System.Nullable<int> ThoiGianThue
		{
			get
			{
				return this._ThoiGianThue;
			}
			set
			{
				if ((this._ThoiGianThue != value))
				{
					this.OnThoiGianThueChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianThue = value;
					this.SendPropertyChanged("ThoiGianThue");
					this.OnThoiGianThueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHITIETHOPDONG_PHIEUGIAHAN", Storage="_PHIEUGIAHANs", ThisKey="MaHD,MaPHG", OtherKey="MaHD,MaPHG")]
		public EntitySet<PHIEUGIAHAN> PHIEUGIAHANs
		{
			get
			{
				return this._PHIEUGIAHANs;
			}
			set
			{
				this._PHIEUGIAHANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOPDONG_CHITIETHOPDONG", Storage="_HOPDONG", ThisKey="MaHD", OtherKey="MaHD", IsForeignKey=true)]
		public HOPDONG HOPDONG
		{
			get
			{
				return this._HOPDONG.Entity;
			}
			set
			{
				HOPDONG previousValue = this._HOPDONG.Entity;
				if (((previousValue != value) 
							|| (this._HOPDONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOPDONG.Entity = null;
						previousValue.CHITIETHOPDONGs.Remove(this);
					}
					this._HOPDONG.Entity = value;
					if ((value != null))
					{
						value.CHITIETHOPDONGs.Add(this);
						this._MaHD = value.MaHD;
					}
					else
					{
						this._MaHD = default(string);
					}
					this.SendPropertyChanged("HOPDONG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_CHITIETHOPDONG", Storage="_PHONG", ThisKey="MaPHG", OtherKey="MaPHG", IsForeignKey=true)]
		public PHONG PHONG
		{
			get
			{
				return this._PHONG.Entity;
			}
			set
			{
				PHONG previousValue = this._PHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONG.Entity = null;
						previousValue.CHITIETHOPDONGs.Remove(this);
					}
					this._PHONG.Entity = value;
					if ((value != null))
					{
						value.CHITIETHOPDONGs.Add(this);
						this._MaPHG = value.MaPHG;
					}
					else
					{
						this._MaPHG = default(string);
					}
					this.SendPropertyChanged("PHONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIEUGIAHANs(PHIEUGIAHAN entity)
		{
			this.SendPropertyChanging();
			entity.CHITIETHOPDONG = this;
		}
		
		private void detach_PHIEUGIAHANs(PHIEUGIAHAN entity)
		{
			this.SendPropertyChanging();
			entity.CHITIETHOPDONG = null;
		}
	}
}
#pragma warning restore 1591
